
/**
 *
 * Author(s): Lane W Surface
 * Created:   2025-01-08
 * License:   MIT
 *
 * Copyright Surface EP, LLC 2025.
 */


#ifndef __MIPI_INIT__
#define __MIPI_INIT__

#include "mipi.h"
#include "mipi_dcs.h"

#ifdef __cplusplus
extern "C" {
#endif

/* clang-format off */

/**
 * ST7735
 *
 * width: 128, height: 160
 */
static const uint8_t
MIPI_DEV_ST7735[]=
{
  SWRST,
  MIPI_DELAY, 150,
  SLPOUT,
  MIPI_DELAY, 255,
  // FPS=Fosc/((RTNA*2+40)*(LINE+FPA+BPA))
  // Fosc=625 KHz
  // FRMCTL [1,44,45];
  FRMCTRL1, 3, 0x01, 0x2C, 0x2D, // 59 FPS
  FRMCTRL2, 3, 0x01, 0x2C, 0x2D,
  FRMCTRL3, 6, 0x01, 0x2C, 0x2D, 0x01, 0x2C, 0x2D,
  INVCTRL, 1, 0x07,
  PWCTRL1, 3, 0xA2, 0x02, 0x84,
  PWCTRL2, 1, 0xC5,
  PWCTRL3, 2, 0x8A, 0x2A,
  PWCTRL4, 2, 0x8A, 0xEE,
  PWCTRL5, 1, 0x0E,
  INVOFF, 0,

  MADCTL, 1, SET_FLAGS (
		MIRROR_X,
		SWAP_XY,
		PIXEL_ORDER_BGR
	),
  // COLMOD <mipi_color_fmt::RGB_565>;
  COLMOD, 1, IFPF_16_BIT,

  // CASET <0,xi,0,xf>;
  CASET, 4, 0x00, 0x00, 0x00, 0x9f,
  // RASET <0,yi,0,yf>;
  RASET, 4, 0x00, 0x00, 0x00, 0x7f,

  SET_POS_GAMMA, 16,
    0x02, 0x1C, 0x07, 0x12,
    0x37, 0x32, 0x29, 0x2D,
    0x29, 0x25, 0x2B, 0x39,
    0x00, 0x01, 0x03, 0x10,
  SET_NEG_GAMMA, 16,
    0x03, 0x1D, 0x07, 0x06,
    0x2E, 0x2C, 0x29, 0x2D,
    0x2E, 0x2E, 0x37, 0x3F,
    0x00, 0x00, 0x02, 0x10,

  NORON,
  MIPI_DELAY, 10,
  DISPON,
  MIPI_DELAY, 100,

  END_DCS_SEQ // sentinel
};

/**
 * ST7789
 */

 /**
  * ST* (width: 380, height: 420)
  */

/**
 * ILI9341
 */
static const uint8_t
MIPI_DEV_ILI9341[]=
{
  SWRST,
  MIPI_DELAY, 50,
  DISPOFF, 0,
  0xF6, 3, 0x01, 0x01, 0x00, // IF_CTL (big endian transfers, etc.)
  0xCF, 3, 0x00, 0x81, 0x30, // PWR_CTL_A
  0xED, 4, 0x64, 0x03, 0x12, 0x81,
  0xE8, 3, 0x85, 0x10, 0x78, // DVR_TIME_A
  0xCB, 5, 0x39, 0x2C, 0x00, 0x34, 0x02, // PWR_CTL_B
  0xF7, 1, 0x20, // PUMP_RATIO
  0xEA, 2, 0x00, 0x00, // DVR_TIME_B
  0xB0, 1, 0x00,
  INVCTRL, 1, 0x00,
  PWCTRL1, 1, 0x21,
  PWCTRL2, 1, 0x11,
  VMCTRL1, 2, 0x3F, 0x3C,
  VMOFCTRL, 1, 0xB5,

  CASET, 4, 0x00, 0x00, 0x00, 0xF0,
  RASET, 4, 0x00, 0x00, 0x01, 0x40,

  MADCTL, 1, 0x48,
  COLMOD, 1, IFPF_16_BIT,
  FRMCTRL1, 2, 0x00, 0x1B,
  0xF2, 1, 0x00,

	// Set grayscale volatages to adjust for the characteristics of the display.
  GAMSET, 1, 0x01,
  SET_POS_GAMMA, 15,
    0x0F, 0x26, 0x24,
    0x0B, 0x0E, 0x09,
    0x54, 0xA8, 0x46,
    0x0C, 0x17, 0x09,
    0x0F, 0x07, 0x00,
	SET_NEG_GAMMA, 15,
    0x00, 0x19, 0x1B,
    0x04, 0x10, 0x07,
    0x2A, 0x47, 0x39,
    0x03, 0x06, 0x06,
    0x30, 0x38, 0x0F,

  0xB7, 1, 0x07,
  SLPOUT,
  MIPI_DELAY, 150,
  DISPON,

  END_DCS_SEQ
};

/* clang-format on */

#ifdef __cplusplus
}
#endif

#endif
